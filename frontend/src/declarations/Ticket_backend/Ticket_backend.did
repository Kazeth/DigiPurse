type TicketKind = 
 variant {
   Seated: record {seatInfo: text;};
   Seatless;
 };
type TicketActor = 
 service {
   createTicket: (eventId: text, owner: principal, ticketDesc: text, price:
    nat, kind: TicketKind) -> (Ticket);
   getAllOnSaleTicket: () -> (vec record {
                                    text;
                                    Ticket;
                                  }) query;
   getAllUserTicket: (user: principal) -> (vec record {
                                                 text;
                                                 Ticket;
                                               }) query;
   sellTicket: (ticketId: text) -> (opt Ticket);
   transferTicket: (ticket: Ticket, newOwner: principal) -> (Ticket);
 };
type Ticket = 
 record {
   eventID: text;
   isOnMarketplace: bool;
   kind: TicketKind;
   owner: principal;
   price: nat;
   ticketDesc: text;
   ticketID: text;
   valid: bool;
 };
service : () -> TicketActor
