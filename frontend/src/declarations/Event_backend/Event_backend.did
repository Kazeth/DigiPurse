type Time = int;
type TicketKind = 
 variant {
   Seated: record {seatInfo: text;};
   Seatless;
 };
type EventActor = 
 service {
   createEvent: (name: text, organizer: principal, desc: text, date: 
    Time, duration: nat, supply: nat, prices: vec nat, kind: TicketKind,
    valid: bool) -> (Event);
   getAllEvents: () -> (vec record {
                              text;
                              Event;
                            }) query;
   getEventByEventId: (eventId: text) -> (opt Event) query;
 };
type Event = 
 record {
   date: Time;
   description: text;
   durationMinutes: nat;
   id: text;
   kind: TicketKind;
   name: text;
   organizer: principal;
   prices: vec nat;
   ticketSupply: nat;
   valid: bool;
 };
service : () -> EventActor
